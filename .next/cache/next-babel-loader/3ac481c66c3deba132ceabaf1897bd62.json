{"ast":null,"code":"var _jsxFileName = \"/Users/muhilham/Documents/repo/getCraft/fe-test/pages/_app.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport React from 'react'; // import withRedux from 'next-redux-wrapper'\n\nimport { wrapper } from \"../redux\"; // class MyApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}\n//     // Anything returned here can be access by the client\n//     return { pageProps }\n//   }\n//   render() {\n//     // Information that was returned  from 'getInitialProps' are stored in the props i.e. pageProps\n//     const { Component, pageProps, store } = this.props\n//     return (\n//       <Provider store={store}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     )\n//   }\n// }\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => __jsx(Component, _extends({}, pageProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}));\n\nexport default wrapper.withRedux(MyApp);","map":{"version":3,"sources":["/Users/muhilham/Documents/repo/getCraft/fe-test/pages/_app.jsx"],"names":["App","Provider","React","wrapper","MyApp","Component","pageProps","withRedux"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,OAAT,mB,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KACZ,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAIA,eAAeH,OAAO,CAACI,SAAR,CAAkBH,KAAlB,CAAf","sourcesContent":["import App from 'next/app'\nimport { Provider } from 'react-redux'\nimport React from 'react'\n// import withRedux from 'next-redux-wrapper'\n\nimport { wrapper } from '../redux'\n\n// class MyApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}\n\n//     // Anything returned here can be access by the client\n//     return { pageProps }\n//   }\n\n//   render() {\n//     // Information that was returned  from 'getInitialProps' are stored in the props i.e. pageProps\n//     const { Component, pageProps, store } = this.props\n\n//     return (\n//       <Provider store={store}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     )\n//   }\n// }\n\nconst MyApp = ({ Component, pageProps }) => (\n  <Component {...pageProps} />\n)\n\nexport default wrapper.withRedux(MyApp)\n"]},"metadata":{},"sourceType":"module"}