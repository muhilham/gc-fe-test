{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/muhilham/Documents/repo/getCraft/fe-test/pages/_app.jsx\";\n\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport React from 'react'; // import withRedux from 'next-redux-wrapper'\n\nimport { wrapper } from \"../redux\"; // class MyApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}\n//     // Anything returned here can be access by the client\n//     return { pageProps }\n//   }\n//   render() {\n//     // Information that was returned  from 'getInitialProps' are stored in the props i.e. pageProps\n//     const { Component, pageProps, store } = this.props\n//     return (\n//       <Provider store={store}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     )\n//   }\n// }\n\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }));\n};\n\n_c = MyApp;\nexport default _c2 = wrapper.withRedux(MyApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/muhilham/Documents/repo/getCraft/fe-test/pages/_app.jsx"],"names":["App","Provider","React","wrapper","MyApp","Component","pageProps","withRedux"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,OAAT,mB,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,SAAd,QAAcA,SAAd;AAAA,SACZ,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADY;AAAA,CAAd;;KAAMF,K;AAIN,qBAAeD,OAAO,CAACI,SAAR,CAAkBH,KAAlB,CAAf","sourcesContent":["import App from 'next/app'\nimport { Provider } from 'react-redux'\nimport React from 'react'\n// import withRedux from 'next-redux-wrapper'\n\nimport { wrapper } from '../redux'\n\n// class MyApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}\n\n//     // Anything returned here can be access by the client\n//     return { pageProps }\n//   }\n\n//   render() {\n//     // Information that was returned  from 'getInitialProps' are stored in the props i.e. pageProps\n//     const { Component, pageProps, store } = this.props\n\n//     return (\n//       <Provider store={store}>\n//         <Component {...pageProps} />\n//       </Provider>\n//     )\n//   }\n// }\n\nconst MyApp = ({ Component, pageProps }) => (\n  <Component {...pageProps} />\n)\n\nexport default wrapper.withRedux(MyApp)\n"]},"metadata":{},"sourceType":"module"}